1. Complete Domain Service Interfaces (Domain Responsibility)
   - These are contracts for complex business rules spanning aggregates
   - IContentModerationService interface is correct for domain
   - IFollowService interface for complex follow business rules
   - These define what the domain needs, implementation goes in Infrastructure

2. Add Missing Domain Specifications (Domain Responsibility)
   - Create ISpecification<T> interface for business rule specifications
   - UserCanFollowSpecification (business rule)
   - ValidPostContentSpecification (business rule)
   - These encapsulate complex business rules

3. Strengthen Value Objects (Domain Responsibility)
   - Add missing business validation in existing value objects
   - Ensure value objects encapsulate domain concepts properly
   - Add invariants that protect domain rules

4. Add Entity Business Methods (Domain Responsibility)
   - User.ChangePassword() - with domain validation
   - Post.AddComment() - with business rules
   - Profile.Follow() - with business rules
   - Follow.Accept(), Follow.Reject() - state transitions